library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
g <- ggplot(movies, aes(votes, rating))
class(g)
print(g)
require("knitr")
install.packages("knitr")
library knitr
library(knitr)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
myplot(s)
myPlot(s)
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
A <- 0.1
B <- 0.09
AoB <- 0.15
A + B - AoB
x <- 1:4
p <- x/sum(x)
temp <- rbind(x,p)
rownames(temp) <- c("X,"prob)
temp
sum(temp.X*temp.Prob)
sum(temp$X*temp$Prob)
class(temp)
sum(x * p)
round(pnorm(93, mean = 100, sd = 10) * 100
)
round(pnorm(70, mean = 80, sd = 10) * 100)
round(qnorm(95, mean = 1100, sd = 75) * 100)
round(pnorm(95, mean = 1100, sd = 75) * 100)
round(qnorm(95, mean = 1100, sd = 75) * 100)
round(qnorm(0.95, mean = 1100, sd = 75) * 100)
round(qnorm(0.95, mean = 1100, sd = 75) )
round(qnorm(0.95, mean = 1100, sd = 75/ sqrt(100)) )
round(pbinom(5, prob = .5, size = 6, lower.tail = FALSE) * 100, 1)
round(pbinom(4, prob = .5, size = 6, lower.tail = FALSE) * 100, 1)
(round(pbinom(5, prob = .5, size = 6, lower.tail = FALSE) * 100, 1) + round(pbinom(4, prob = .5, size = 6, lower.tail = FALSE) * 100, 1))/2
pbinom(3, 5, 0.5, lower.tail = FALSE)
library(datasets);
data(mtcars)
round(t.test(mtcars$mpg)$conf.int)
round(qt(.95, df = 8) * 1 / 3, 2)
m4 <- mtcars$mpg[mtcars$cyl == 4]
confint <- as.vector(t.test(m4, m6, var.equal = TRUE)$conf.int)
confint <- as.vector(t.test(m4, m6, var.equal = TRUE)$conf.int)
m6 <- mtcars$mpg[mtcars$cyl == 6]
#this does 4 - 6
confint <- as.vector(t.test(m4, m6, var.equal = TRUE)$conf.int)
confint
n1 <- n2 <- 9
x1 <- -3  ##treated
x2 <- 1  ##placebo
s1 <- 1.5  ##treated
s2 <- 1.8  ##placebo
spsq <- ( (n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2)
spsq
n <- 9
sampleMean <- 1100
sampleStd <- 30
alpha <- 0.05
round(sampleMean + c(-1, 1) * qt(1 - (alpha/2), n - 1) * sampleStd/sqrt(n))
setwd("~/GitHub/Developing data product/rydt_TitanicApp")
library(shiny)
runApp()
runApp()
runApp()
library(shinyapps)
shinyapps::setAccountInfo(name='rydt', token='677A99F9BBE91ABB85F2B3CFF982FF64', secret='FAh8qN0c3skk6o1aFYionrNJmz/WSuPFfaLmR1N0')
deployApp()
